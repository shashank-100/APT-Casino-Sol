"use client";

import React, { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { FaHistory, FaStar, FaTrophy, FaChartBar, FaChartLine, FaBomb, FaSort, FaSortUp, FaSortDown, FaCalendarAlt, FaAngleLeft, FaAngleRight } from "react-icons/fa";
import { GiMining, GiDiamonds, GiTreasureMap, GiGoldBar, GiDiamondHard, GiDiamondTrophy } from "react-icons/gi";
import { HiClock, HiOutlineLightningBolt } from "react-icons/hi";

const MinesHistory = ({ gameHistory = [], userStats = {} }) => {
  // State for pagination and sorting
  const [currentPage, setCurrentPage] = useState(1);
  const [sortField, setSortField] = useState(null);
  const [sortDirection, setSortDirection] = useState('asc');
  const itemsPerPage = 5;
  
  // Default user stats if none provided
  const defaultStats = {
    totalPlayed: 0,
    totalWon: 0,
    winRate: "0%",
    biggestWin: "0",
    avgMultiplier: "0x",
    profitLoss: "0",
  };

  const stats = { ...defaultStats, ...userStats };

  // Default history if none provided
  const defaultHistory = [
    { id: 1, mines: 5, bet: "50 APTC", outcome: "win", payout: "165 APTC", multiplier: "3.3x", time: "5m ago" },
    { id: 2, mines: 3, bet: "100 APTC", outcome: "loss", payout: "0 APTC", multiplier: "0x", time: "8m ago" },
    { id: 3, mines: 10, bet: "25 APTC", outcome: "win", payout: "223 APTC", multiplier: "8.91x", time: "15m ago" },
    { id: 4, mines: 5, bet: "75 APTC", outcome: "loss", payout: "0 APTC", multiplier: "0x", time: "22m ago" },
    { id: 5, mines: 1, bet: "200 APTC", outcome: "win", payout: "253 APTC", multiplier: "1.27x", time: "30m ago" },
    { id: 6, mines: 7, bet: "50 APTC", outcome: "win", payout: "300 APTC", multiplier: "6.0x", time: "45m ago" },
    { id: 7, mines: 10, bet: "35 APTC", outcome: "loss", payout: "0 APTC", multiplier: "0x", time: "1h ago" },
  ];

  const history = gameHistory.length > 0 ? gameHistory : defaultHistory;
  
  // Handle sorting
  const handleSort = (field) => {
    if (sortField === field) {
      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');
    } else {
      setSortField(field);
      setSortDirection('asc');
    }
  };
  
  // Sort icon component
  const SortIcon = ({ field }) => {
    if (sortField !== field) return <FaSort className="text-white/30 ml-1" size={10} />;
    return sortDirection === 'asc' ? <FaSortUp className="text-purple-400 ml-1" size={12} /> : <FaSortDown className="text-purple-400 ml-1" size={12} />;
  };
  
  // Pagination logic
  const totalPages = Math.ceil(history.length / itemsPerPage);
  const paginatedHistory = history.slice(
    (currentPage - 1) * itemsPerPage,
    currentPage * itemsPerPage
  );
  
  // Animation variants
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: { staggerChildren: 0.05 }
    }
  };

  const itemVariants = {
    hidden: { opacity: 0, x: -10 },
    visible: { opacity: 1, x: 0 }
  };
  
  const cardHoverVariants = {
    hover: { 
      y: -5, 
      boxShadow: "0 10px 25px -5px rgba(0, 0, 0, 0.3)",
      transition: { duration: 0.2 }
    }
  };

  return (
    <div className="bg-gradient-to-br from-[#290023]/80 to-[#150012]/90 rounded-xl border-2 border-purple-700/30 p-5 shadow-xl shadow-purple-900/20 backdrop-blur-sm relative overflow-hidden">
      {/* Decorative elements */}
      <div className="absolute top-0 right-0 w-40 h-40 bg-purple-600/5 rounded-full blur-3xl -z-1"></div>
      <div className="absolute bottom-0 left-0 w-40 h-40 bg-blue-600/5 rounded-full blur-3xl -z-1"></div>
      <div className="absolute top-1/2 left-1/3 w-20 h-20 bg-pink-500/5 rounded-full blur-2xl -z-1"></div>
      
      {/* Header with shimmer effect */}
      <div className="relative overflow-hidden mb-5">
        <div className="flex items-center justify-between">
          <h3 className="text-xl font-bold flex items-center font-display">
            <div className="p-2 rounded-full bg-purple-900/30 mr-3 border border-purple-800/30 shadow-inner">
              <FaHistory className="text-purple-400" />
            </div>
            <span className="bg-gradient-to-r from-white to-purple-300 bg-clip-text text-transparent">
              Your Mines History
            </span>
          </h3>
          <div className="bg-gradient-to-r from-purple-900/30 to-blue-900/20 px-3 py-1.5 rounded-full text-xs border border-purple-800/30 shadow-inner">
            <span className="font-medium text-white/90">{history.length}</span>
            <span className="text-white/70"> Games</span>
          </div>
        </div>
        
        {/* Animated underline */}
        <div className="h-px mt-3 bg-gradient-to-r from-purple-600/50 via-blue-600/30 to-transparent relative overflow-hidden">
          <motion.div 
            className="h-full w-20 bg-gradient-to-r from-transparent via-white/70 to-transparent absolute"
            animate={{ 
              x: ["0%", "100%"],
              opacity: [0, 1, 0]
            }}
            transition={{ 
              repeat: Infinity, 
              duration: 2,
              ease: "linear"
            }}
          />
        </div>
      </div>

      {/* User Stats - Enhanced Cards */}
      <div className="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-6 gap-2 lg:gap-3 mb-5">
        <motion.div 
          className="bg-gradient-to-br from-purple-900/30 to-purple-800/10 rounded-xl p-3 border border-purple-800/30 shadow-md"
          whileHover="hover"
          variants={cardHoverVariants}
        >
          <div className="text-xs text-white/60 mb-1 font-sans">Games Played</div>
          <div className="text-sm font-semibold text-white flex items-center mt-1">
            <FaChartBar className="mr-1.5 text-blue-400" /> 
            <span className="font-display">{stats.totalPlayed}</span>
          </div>
        </motion.div>
        
        <motion.div 
          className="bg-gradient-to-br from-purple-900/30 to-purple-800/10 rounded-xl p-3 border border-purple-800/30 shadow-md"
          whileHover="hover"
          variants={cardHoverVariants}
        >
          <div className="text-xs text-white/60 mb-1 font-sans">Games Won</div>
          <div className="text-sm font-semibold text-white flex items-center mt-1">
            <FaTrophy className="mr-1.5 text-yellow-400" /> 
            <span className="font-display">{stats.totalWon}</span>
          </div>
        </motion.div>
        
        <motion.div 
          className="bg-gradient-to-br from-purple-900/30 to-purple-800/10 rounded-xl p-3 border border-purple-800/30 shadow-md"
          whileHover="hover"
          variants={cardHoverVariants}
        >
          <div className="text-xs text-white/60 mb-1 font-sans">Win Rate</div>
          <div className="text-sm font-semibold text-white flex items-center mt-1">
            <FaStar className="mr-1.5 text-orange-400" /> 
            <span className="font-display">{stats.winRate}</span>
          </div>
        </motion.div>
        
        <motion.div 
          className="bg-gradient-to-br from-purple-900/30 to-purple-800/10 rounded-xl p-3 border border-purple-800/30 shadow-md"
          whileHover="hover"
          variants={cardHoverVariants}
        >
          <div className="text-xs text-white/60 mb-1 font-sans">Biggest Win</div>
          <div className="text-sm font-semibold text-green-400 flex items-center mt-1">
            <GiDiamondTrophy className="mr-1.5" /> 
            <span className="font-display">{stats.biggestWin}</span>
          </div>
        </motion.div>
        
        <motion.div 
          className="bg-gradient-to-br from-purple-900/30 to-purple-800/10 rounded-xl p-3 border border-purple-800/30 shadow-md"
          whileHover="hover"
          variants={cardHoverVariants}
        >
          <div className="text-xs text-white/60 mb-1 font-sans">Avg Multiplier</div>
          <div className="text-sm font-semibold text-yellow-400 flex items-center mt-1">
            <HiOutlineLightningBolt className="mr-1.5" /> 
            <span className="font-display">{stats.avgMultiplier}</span>
          </div>
        </motion.div>
        
        <motion.div 
          className="bg-gradient-to-br from-purple-900/30 to-purple-800/10 rounded-xl p-3 border border-purple-800/30 shadow-md"
          whileHover="hover"
          variants={cardHoverVariants}
        >
          <div className="text-xs text-white/60 mb-1 font-sans">Profit/Loss</div>
          <div className={`text-sm font-semibold flex items-center mt-1 ${
            stats.profitLoss.startsWith('-') ? 'text-red-400' : 'text-green-400'
          }`}>
            <GiGoldBar className="mr-1.5" /> 
            <span className="font-display">{stats.profitLoss}</span>
          </div>
        </motion.div>
      </div>

      {/* Game History - Enhanced Table */}
      <div className="bg-black/20 rounded-xl border border-purple-800/20 p-4 shadow-inner">
        {/* Header */}
        <div className="grid grid-cols-6 gap-2 pb-3 text-xs font-medium border-b border-purple-800/30 px-2">
          <div 
            className="flex items-center cursor-pointer hover:text-white/90 transition-colors text-white/70"
            onClick={() => handleSort('id')}
          >
            Game <SortIcon field="id" />
          </div>
          <div 
            className="flex items-center cursor-pointer hover:text-white/90 transition-colors text-white/70"
            onClick={() => handleSort('mines')}
          >
            Mines <SortIcon field="mines" />
          </div>
          <div 
            className="flex items-center cursor-pointer hover:text-white/90 transition-colors text-white/70"
            onClick={() => handleSort('bet')}
          >
            Bet <SortIcon field="bet" />
          </div>
          <div 
            className="flex items-center cursor-pointer hover:text-white/90 transition-colors text-white/70"
            onClick={() => handleSort('multiplier')}
          >
            Multiplier <SortIcon field="multiplier" />
          </div>
          <div 
            className="flex items-center cursor-pointer hover:text-white/90 transition-colors text-white/70"
            onClick={() => handleSort('payout')}
          >
            Payout <SortIcon field="payout" />
          </div>
          <div 
            className="flex items-center cursor-pointer hover:text-white/90 transition-colors text-white/70"
            onClick={() => handleSort('time')}
          >
            Time <SortIcon field="time" />
          </div>
        </div>
        
        {/* History Items */}
        <motion.div 
          variants={containerVariants}
          initial="hidden"
          animate="visible"
          className="space-y-2 mt-3 max-h-[280px] overflow-y-auto pr-1 custom-scrollbar"
        >
          {paginatedHistory.map((game, index) => (
            <motion.div
              key={game.id}
              variants={itemVariants}
              whileHover={{ 
                scale: 1.02, 
                boxShadow: "0 8px 20px rgba(0, 0, 0, 0.2)",
                y: -2
              }}
              className={`grid grid-cols-6 gap-2 p-3 text-xs rounded-lg transition-all ${
                game.outcome === 'win' 
                  ? 'bg-gradient-to-r from-green-900/20 to-green-800/5 border border-green-800/30' 
                  : 'bg-gradient-to-r from-red-900/20 to-red-800/5 border border-red-800/30'
              } shadow-sm`}
            >
              <div className="flex items-center">
                <div className={`w-5 h-5 rounded-full mr-1.5 flex items-center justify-center ${
                  game.outcome === 'win' 
                    ? 'bg-green-900/40 text-green-400 border border-green-800/30' 
                    : 'bg-red-900/40 text-red-400 border border-red-800/30'
                }`}>
                  {game.outcome === 'win' ? '✓' : '✗'}
                </div>
                <span className="text-white/90 font-medium">#{game.id}</span>
              </div>
              <div className="text-white/90 flex items-center">
                <div className="w-4 h-4 rounded-full bg-red-900/30 border border-red-800/30 flex items-center justify-center mr-1.5">
                  <FaBomb className="text-red-400" size={8} />
                </div>
                <span>{game.mines}</span>
              </div>
              <div className="text-white/90 flex items-center">
                <div className="w-4 h-4 rounded-full bg-yellow-900/30 border border-yellow-800/30 flex items-center justify-center mr-1.5">
                  <GiGoldBar className="text-yellow-400" size={8} />
                </div>
                <span>{game.bet}</span>
              </div>
              <div className={`flex items-center ${game.outcome === 'win' ? 'text-yellow-400' : 'text-gray-500'}`}>
                <div className="w-4 h-4 rounded-full bg-blue-900/30 border border-blue-800/30 flex items-center justify-center mr-1.5">
                  <HiOutlineLightningBolt className="text-blue-400" size={8} />
                </div>
                <span className="font-medium">{game.multiplier}</span>
              </div>
              <div className={`flex items-center ${game.outcome === 'win' ? 'text-green-400' : 'text-gray-500'} font-medium`}>
                <div className="w-4 h-4 rounded-full bg-green-900/30 border border-green-800/30 flex items-center justify-center mr-1.5">
                  <GiDiamonds className="text-green-400" size={8} />
                </div>
                <span>{game.payout}</span>
              </div>
              <div className="text-white/70 flex items-center">
                <div className="w-4 h-4 rounded-full bg-purple-900/30 border border-purple-800/30 flex items-center justify-center mr-1.5">
                  <HiClock className="text-purple-400" size={8} />
                </div>
                <span>{game.time}</span>
              onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}
              disabled={currentPage === totalPages}
              className={`w-8 h-8 rounded-full flex items-center justify-center ${
                currentPage === totalPages 
                  ? 'bg-gray-800/50 text-gray-600 cursor-not-allowed' 
                  : 'bg-purple-900/30 text-white/80 hover:bg-purple-800/40 hover:text-white'
              } border border-purple-800/30 transition-colors`}
            >
              <FaAngleRight size={14} />
            </button>
          </div>
        )}
      </div>
      
      {/* Empty State - Enhanced */}
      {history.length === 0 && (
        <div className="text-center py-16 px-4">
          <motion.div
            initial={{ opacity: 0, scale: 0.8 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.5 }}
          >
            <GiTreasureMap className="mx-auto text-5xl mb-3 text-purple-500/60" />
            <h4 className="text-lg font-medium text-white mb-2 font-display">No Game History Yet</h4>
            <p className="text-white/60 text-sm max-w-md mx-auto font-sans">
              Start playing to see your results! Your game history will track your wins, losses, and overall performance.
            </p>
          </motion.div>
        </div>
      )}
    </div>
  );
};

export default MinesHistory; 